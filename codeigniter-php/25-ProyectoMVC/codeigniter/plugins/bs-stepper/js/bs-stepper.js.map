{"version":3,"file":"bs-stepper.js","sources":["../../src/js/polyfill.js","../../src/js/util.js","../../src/js/listeners.js","../../src/js/index.js"],"sourcesContent":["let matches = window.Element.prototype.matches\nlet closest = (element, selector) => element.closest(selector)\nlet WinEvent = (inType, params) => new window.Event(inType, params)\nlet createCustomEvent = (eventName, params) => {\n  const cEvent = new window.CustomEvent(eventName, params)\n\n  return cEvent\n}\n\n/* istanbul ignore next */\nfunction polyfill () {\n  if (!window.Element.prototype.matches) {\n    matches = window.Element.prototype.msMatchesSelector ||\n      window.Element.prototype.webkitMatchesSelector\n  }\n\n  if (!window.Element.prototype.closest) {\n    closest = (element, selector) => {\n      if (!document.documentElement.contains(element)) {\n        return null\n      }\n\n      do {\n        if (matches.call(element, selector)) {\n          return element\n        }\n\n        element = element.parentElement || element.parentNode\n      } while (element !== null && element.nodeType === 1)\n\n      return null\n    }\n  }\n\n  if (!window.Event || typeof window.Event !== 'function') {\n    WinEvent = (inType, params) => {\n      params = params || {}\n      const e = document.createEvent('Event')\n      e.initEvent(inType, Boolean(params.bubbles), Boolean(params.cancelable))\n      return e\n    }\n  }\n\n  if (typeof window.CustomEvent !== 'function') {\n    const originPreventDefault = window.Event.prototype.preventDefault\n\n    createCustomEvent = (eventName, params) => {\n      const evt = document.createEvent('CustomEvent')\n\n      params = params || { bubbles: false, cancelable: false, detail: null }\n      evt.initCustomEvent(eventName, params.bubbles, params.cancelable, params.detail)\n      evt.preventDefault = function () {\n        if (!this.cancelable) {\n          return\n        }\n\n        originPreventDefault.call(this)\n        Object.defineProperty(this, 'defaultPrevented', {\n          get: function () { return true }\n        })\n      }\n\n      return evt\n    }\n  }\n}\n\npolyfill()\n\nexport {\n  closest,\n  WinEvent,\n  createCustomEvent\n}\n","import { WinEvent, createCustomEvent } from './polyfill'\n\nconst MILLISECONDS_MULTIPLIER = 1000\n\nconst ClassName = {\n  ACTIVE: 'active',\n  LINEAR: 'linear',\n  BLOCK: 'dstepper-block',\n  NONE: 'dstepper-none',\n  FADE: 'fade',\n  VERTICAL: 'vertical'\n}\n\nconst transitionEndEvent = 'transitionend'\nconst customProperty = 'bsStepper'\n\nconst show = (stepperNode, indexStep, options, done) => {\n  const stepper = stepperNode[customProperty]\n\n  if (stepper._steps[indexStep].classList.contains(ClassName.ACTIVE) || stepper._stepsContents[indexStep].classList.contains(ClassName.ACTIVE)) {\n    return\n  }\n\n  const showEvent = createCustomEvent('show.bs-stepper', {\n    cancelable: true,\n    detail: {\n      from: stepper._currentIndex,\n      to: indexStep,\n      indexStep\n    }\n  })\n  stepperNode.dispatchEvent(showEvent)\n\n  const activeStep = stepper._steps.filter(step => step.classList.contains(ClassName.ACTIVE))\n  const activeContent = stepper._stepsContents.filter(content => content.classList.contains(ClassName.ACTIVE))\n\n  if (showEvent.defaultPrevented) {\n    return\n  }\n\n  if (activeStep.length) {\n    activeStep[0].classList.remove(ClassName.ACTIVE)\n  }\n  if (activeContent.length) {\n    activeContent[0].classList.remove(ClassName.ACTIVE)\n\n    if (!stepperNode.classList.contains(ClassName.VERTICAL) && !stepper.options.animation) {\n      activeContent[0].classList.remove(ClassName.BLOCK)\n    }\n  }\n\n  showStep(stepperNode, stepper._steps[indexStep], stepper._steps, options)\n  showContent(stepperNode, stepper._stepsContents[indexStep], stepper._stepsContents, activeContent, done)\n}\n\nconst showStep = (stepperNode, step, stepList, options) => {\n  stepList.forEach(step => {\n    const trigger = step.querySelector(options.selectors.trigger)\n\n    trigger.setAttribute('aria-selected', 'false')\n    // if stepper is in linear mode, set disabled attribute on the trigger\n    if (stepperNode.classList.contains(ClassName.LINEAR)) {\n      trigger.setAttribute('disabled', 'disabled')\n    }\n  })\n\n  step.classList.add(ClassName.ACTIVE)\n  const currentTrigger = step.querySelector(options.selectors.trigger)\n\n  currentTrigger.setAttribute('aria-selected', 'true')\n  // if stepper is in linear mode, remove disabled attribute on current\n  if (stepperNode.classList.contains(ClassName.LINEAR)) {\n    currentTrigger.removeAttribute('disabled')\n  }\n}\n\nconst showContent = (stepperNode, content, contentList, activeContent, done) => {\n  const stepper = stepperNode[customProperty]\n  const toIndex = contentList.indexOf(content)\n  const shownEvent = createCustomEvent('shown.bs-stepper', {\n    cancelable: true,\n    detail: {\n      from: stepper._currentIndex,\n      to: toIndex,\n      indexStep: toIndex\n    }\n  })\n\n  function complete () {\n    content.classList.add(ClassName.BLOCK)\n    content.removeEventListener(transitionEndEvent, complete)\n    stepperNode.dispatchEvent(shownEvent)\n    done()\n  }\n\n  if (content.classList.contains(ClassName.FADE)) {\n    content.classList.remove(ClassName.NONE)\n    const duration = getTransitionDurationFromElement(content)\n\n    content.addEventListener(transitionEndEvent, complete)\n    if (activeContent.length) {\n      activeContent[0].classList.add(ClassName.NONE)\n    }\n\n    content.classList.add(ClassName.ACTIVE)\n    emulateTransitionEnd(content, duration)\n  } else {\n    content.classList.add(ClassName.ACTIVE)\n    content.classList.add(ClassName.BLOCK)\n    stepperNode.dispatchEvent(shownEvent)\n    done()\n  }\n}\n\nconst getTransitionDurationFromElement = element => {\n  if (!element) {\n    return 0\n  }\n\n  // Get transition-duration of the element\n  let transitionDuration = window.getComputedStyle(element).transitionDuration\n  const floatTransitionDuration = parseFloat(transitionDuration)\n\n  // Return 0 if element or transition duration is not found\n  if (!floatTransitionDuration) {\n    return 0\n  }\n\n  // If multiple durations are defined, take the first\n  transitionDuration = transitionDuration.split(',')[0]\n\n  return parseFloat(transitionDuration) * MILLISECONDS_MULTIPLIER\n}\n\nconst emulateTransitionEnd = (element, duration) => {\n  let called = false\n  const durationPadding = 5\n  const emulatedDuration = duration + durationPadding\n  function listener () {\n    called = true\n    element.removeEventListener(transitionEndEvent, listener)\n  }\n\n  element.addEventListener(transitionEndEvent, listener)\n  window.setTimeout(() => {\n    if (!called) {\n      element.dispatchEvent(WinEvent(transitionEndEvent))\n    }\n\n    element.removeEventListener(transitionEndEvent, listener)\n  }, emulatedDuration)\n}\n\nconst detectAnimation = (contentList, options) => {\n  if (options.animation) {\n    contentList.forEach(content => {\n      content.classList.add(ClassName.FADE)\n      content.classList.add(ClassName.NONE)\n    })\n  }\n}\n\nexport {\n  show,\n  ClassName,\n  customProperty,\n  detectAnimation\n}\n","import { closest } from './polyfill'\r\nimport { customProperty, show } from './util'\r\n\r\nconst buildClickStepLinearListener = () => function clickStepLinearListener (event) {\r\n  event.preventDefault()\r\n}\r\n\r\nconst buildClickStepNonLinearListener = options => function clickStepNonLinearListener (event) {\r\n  event.preventDefault()\r\n\r\n  const step = closest(event.target, options.selectors.steps)\r\n  const stepperNode = closest(step, options.selectors.stepper)\r\n  const stepper = stepperNode[customProperty]\r\n  const stepIndex = stepper._steps.indexOf(step)\r\n\r\n  show(stepperNode, stepIndex, options, () => {\r\n    stepper._currentIndex = stepIndex\r\n  })\r\n}\r\n\r\nexport {\r\n  buildClickStepLinearListener,\r\n  buildClickStepNonLinearListener\r\n}\r\n","import { show, customProperty, detectAnimation, ClassName } from './util'\r\nimport { buildClickStepLinearListener, buildClickStepNonLinearListener } from './listeners'\r\n\r\nconst DEFAULT_OPTIONS = {\r\n  linear: true,\r\n  animation: false,\r\n  selectors: {\r\n    steps: '.step',\r\n    trigger: '.step-trigger',\r\n    stepper: '.bs-stepper'\r\n  }\r\n}\r\n\r\nclass Stepper {\r\n  constructor (element, _options = {}) {\r\n    this._element = element\r\n    this._currentIndex = 0\r\n    this._stepsContents = []\r\n\r\n    this.options = {\r\n      ...DEFAULT_OPTIONS,\r\n      ..._options\r\n    }\r\n\r\n    this.options.selectors = {\r\n      ...DEFAULT_OPTIONS.selectors,\r\n      ...this.options.selectors\r\n    }\r\n\r\n    if (this.options.linear) {\r\n      this._element.classList.add(ClassName.LINEAR)\r\n    }\r\n\r\n    this._steps = [].slice.call(this._element.querySelectorAll(this.options.selectors.steps))\r\n\r\n    this._steps.filter(step => step.hasAttribute('data-target'))\r\n      .forEach(step => {\r\n        this._stepsContents.push(\r\n          this._element.querySelector(step.getAttribute('data-target'))\r\n        )\r\n      })\r\n\r\n    detectAnimation(this._stepsContents, this.options)\r\n    this._setLinkListeners()\r\n    Object.defineProperty(this._element, customProperty, {\r\n      value: this,\r\n      writable: true\r\n    })\r\n\r\n    if (this._steps.length) {\r\n      show(this._element, this._currentIndex, this.options, () => {})\r\n    }\r\n  }\r\n\r\n  // Private\r\n\r\n  _setLinkListeners () {\r\n    this._steps.forEach(step => {\r\n      const trigger = step.querySelector(this.options.selectors.trigger)\r\n\r\n      if (this.options.linear) {\r\n        this._clickStepLinearListener = buildClickStepLinearListener(this.options)\r\n        trigger.addEventListener('click', this._clickStepLinearListener)\r\n      } else {\r\n        this._clickStepNonLinearListener = buildClickStepNonLinearListener(this.options)\r\n        trigger.addEventListener('click', this._clickStepNonLinearListener)\r\n      }\r\n    })\r\n  }\r\n\r\n  // Public\r\n\r\n  next () {\r\n    const nextStep = (this._currentIndex + 1) <= this._steps.length - 1 ? this._currentIndex + 1 : (this._steps.length - 1)\r\n\r\n    show(this._element, nextStep, this.options, () => {\r\n      this._currentIndex = nextStep\r\n    })\r\n  }\r\n\r\n  previous () {\r\n    const previousStep = (this._currentIndex - 1) >= 0 ? this._currentIndex - 1 : 0\r\n\r\n    show(this._element, previousStep, this.options, () => {\r\n      this._currentIndex = previousStep\r\n    })\r\n  }\r\n\r\n  to (stepNumber) {\r\n    const tempIndex = stepNumber - 1\r\n    const nextStep = tempIndex >= 0 && tempIndex < this._steps.length\r\n      ? tempIndex\r\n      : 0\r\n\r\n    show(this._element, nextStep, this.options, () => {\r\n      this._currentIndex = nextStep\r\n    })\r\n  }\r\n\r\n  reset () {\r\n    show(this._element, 0, this.options, () => {\r\n      this._currentIndex = 0\r\n    })\r\n  }\r\n\r\n  destroy () {\r\n    this._steps.forEach(step => {\r\n      const trigger = step.querySelector(this.options.selectors.trigger)\r\n\r\n      if (this.options.linear) {\r\n        trigger.removeEventListener('click', this._clickStepLinearListener)\r\n      } else {\r\n        trigger.removeEventListener('click', this._clickStepNonLinearListener)\r\n      }\r\n    })\r\n\r\n    this._element[customProperty] = undefined\r\n    this._element = undefined\r\n    this._currentIndex = undefined\r\n    this._steps = undefined\r\n    this._stepsContents = undefined\r\n    this._clickStepLinearListener = undefined\r\n    this._clickStepNonLinearListener = undefined\r\n  }\r\n}\r\n\r\nexport default Stepper\r\n"],"names":["matches","window","Element","prototype","closest","element","selector","WinEvent","inType","params","Event","createCustomEvent","eventName","cEvent","CustomEvent","polyfill","msMatchesSelector","webkitMatchesSelector","document","documentElement","contains","call","parentElement","parentNode","nodeType","e","createEvent","initEvent","Boolean","bubbles","cancelable","originPreventDefault","preventDefault","evt","detail","initCustomEvent","Object","defineProperty","get","MILLISECONDS_MULTIPLIER","ClassName","ACTIVE","LINEAR","BLOCK","NONE","FADE","VERTICAL","transitionEndEvent","customProperty","show","stepperNode","indexStep","options","done","stepper","_steps","classList","_stepsContents","showEvent","from","_currentIndex","to","dispatchEvent","activeStep","filter","step","activeContent","content","defaultPrevented","length","remove","animation","showStep","showContent","stepList","forEach","trigger","querySelector","selectors","setAttribute","add","currentTrigger","removeAttribute","contentList","toIndex","indexOf","shownEvent","complete","removeEventListener","duration","getTransitionDurationFromElement","addEventListener","emulateTransitionEnd","transitionDuration","getComputedStyle","floatTransitionDuration","parseFloat","split","called","durationPadding","emulatedDuration","listener","setTimeout","detectAnimation","buildClickStepLinearListener","clickStepLinearListener","event","buildClickStepNonLinearListener","clickStepNonLinearListener","target","steps","stepIndex","DEFAULT_OPTIONS","linear","Stepper","_options","_element","slice","querySelectorAll","hasAttribute","push","getAttribute","_setLinkListeners","value","writable","_clickStepLinearListener","_clickStepNonLinearListener","next","nextStep","previous","previousStep","stepNumber","tempIndex","reset","destroy","undefined"],"mappings":"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
{"version":3,"sources":["webpack://bootstrap-colorpicker/webpack/universalModuleDefinition","webpack://bootstrap-colorpicker/webpack/bootstrap","webpack://bootstrap-colorpicker/external {\"root\":\"jQuery\",\"commonjs2\":\"jquery\",\"commonjs\":\"jquery\",\"amd\":\"jquery\"}","webpack://bootstrap-colorpicker/./src/js/Extension.js","webpack://bootstrap-colorpicker/./src/js/ColorItem.js","webpack://bootstrap-colorpicker/./src/js/options.js","webpack://bootstrap-colorpicker/./src/js/extensions/Palette.js","webpack://bootstrap-colorpicker/./node_modules/color-name/index.js","webpack://bootstrap-colorpicker/./node_modules/color-convert/conversions.js","webpack://bootstrap-colorpicker/./src/js/plugin.js","webpack://bootstrap-colorpicker/./src/js/Colorpicker.js","webpack://bootstrap-colorpicker/./src/js/extensions/index.js","webpack://bootstrap-colorpicker/./src/js/extensions/Debugger.js","webpack://bootstrap-colorpicker/./src/js/extensions/Preview.js","webpack://bootstrap-colorpicker/./src/js/extensions/Swatches.js","webpack://bootstrap-colorpicker/./src/js/SliderHandler.js","webpack://bootstrap-colorpicker/./src/js/PopupHandler.js","webpack://bootstrap-colorpicker/./src/js/InputHandler.js","webpack://bootstrap-colorpicker/./node_modules/color/index.js","webpack://bootstrap-colorpicker/./node_modules/color-string/index.js","webpack://bootstrap-colorpicker/./node_modules/simple-swizzle/index.js","webpack://bootstrap-colorpicker/./node_modules/is-arrayish/index.js","webpack://bootstrap-colorpicker/./node_modules/color-convert/index.js","webpack://bootstrap-colorpicker/./node_modules/color-convert/route.js","webpack://bootstrap-colorpicker/./src/js/ColorHandler.js","webpack://bootstrap-colorpicker/./src/js/PickerHandler.js","webpack://bootstrap-colorpicker/./src/js/AddonHandler.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__0__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","_jquery","Extension","colorpicker","options","arguments","length","undefined","_classCallCheck","this","element","Error","on","$","proxy","onCreate","onDestroy","onUpdate","onChange","onInvalid","onShow","onHide","onEnable","onDisable","color","realColor","event","off","_color","HSVAColor","h","v","a","isNaN","ColorItem","fn","_len","args","Array","_key","result","apply","QixColor","format","_original","disableHexInputFallback","replace","sanitizeFormat","valid","parse","_color2","default","_format","isHex","model","hue","saturation","alpha","hasAlpha","toObject","string","round","str","isValid","isDark","isLight","formula","hues","isArray","colorFormulas","colors","mainColor","forEach","levels","saturationv","push","Math","sanitizeString","e","String","match","toLowerCase","complementary","triad","tetrad","splitcomplement","sassVars","bar_size_short","base_margin","columns","sliderSize","customClass","fallbackColor","horizontal","inline","container","popover","animation","placement","fallbackPlacement","debug","input","addon","autoInputFallback","autoHexInputFallback","useHashPrefix","useAlpha","template","extensions","showText","sliders","selector","maxLeft","maxTop","callLeft","callTop","childSelector","slidersHorz","_Extension2","defaults","namesAsValues","Palette","_this","_possibleConstructorReturn","__proto__","getPrototypeOf","extend","_typeof","keys","getLength","indexOf","toUpperCase","getValue","getName","defaultValue","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","cssKeywords","reverseKeywords","convert","rgb","channels","labels","hsl","hsv","hwb","cmyk","xyz","lab","lch","hex","keyword","ansi16","ansi256","hcg","apple","g","b","min","max","delta","rdif","gdif","bdif","diff","diffc","w","y","k","comparativeDistance","x","pow","reversed","currentClosestDistance","Infinity","currentClosestKeyword","distance","z","t1","t2","t3","val","smin","lmin","sv","hi","floor","f","q","vmin","sl","wh","bl","ratio","y2","x2","z2","hr","atan2","PI","sqrt","cos","sin","ansi","mult","rem","integer","toString","substring","colorString","split","map","char","join","parseInt","chroma","grayscale","pure","mg","_Colorpicker","plugin","Colorpicker","option","fnArgs","slice","isSingleElement","returnValue","$elements","each","$this","_jquery2","inst","data","isFunction","constructor","_Extension","_options","_extensions","_SliderHandler","_PopupHandler","_InputHandler","_ColorHandler","_PickerHandler","_AddonHandler","_ColorItem","colorPickerIdCounter","self","colorHandler","pickerHandler","picker","id","lastEvent","alias","addClass","attr","disabled","inputHandler","InputHandler","ColorHandler","sliderHandler","SliderHandler","popupHandler","PopupHandler","PickerHandler","addonHandler","AddonHandler","init","trigger","initExtensions","attach","update","isDisabled","disable","ext","registerExtension","ExtensionClass","config","unbind","removeClass","removeData","show","hide","toggle","ch","hasColor","equals","createColor","assureColor","enable","eventName","type","coreExtensions","_Debugger","_Preview","_Swatches","_Palette","Debugger","Preview","Swatches","debugger","preview","swatches","palette","eventCounter","hasInput","onChangeInput","_console","logMessage","console","concat","logArgs","log","_get","elementInner","find","append","css","html","toRgbString","_Palette2","barTemplate","swatchTemplate","isEnabled","load","_this2","swatchContainer","isAliased","empty","$swatch","$sw","setValue","currentSlider","mousePointer","left","top","onMove","defaultOnMove","slider","cp","getFallbackColor","getClone","guideStyle","focus","sliderClasses","sliderName","pressed","mousemove.colorpicker","moved","touchmove.colorpicker","mouseup.colorpicker","released","touchend.colorpicker","pageX","pageY","originalEvent","touches","target","zone","closest","is","parent","guide","offset","style","preventDefault","popoverTarget","popoverTip","clicking","hidding","showing","hasAddon","createPopover","mousedown.colorpicker touchstart.colorpicker","focus.colorpicker","focusout.colorpicker","reposition","document","onClickingInside","isOrIsInside","currentTarget","isClickingInside","_defaults","content","useGetInstance","bootstrap","Popover","getInstance","getTipElement","tip","fireShow","fireHide","isVisible","stopPropagation","isPopover","isHidden","hasClass","_initValue","keyup.colorpicker","onkeyup","change.colorpicker","onchange","item","getFormattedColor","prop","inputVal","getColorString","resolveColorDelegate","isInvalidColor","_slice","skippedModels","hashedModelKeys","sort","limiters","Color","obj","valpha","newArr","zeroArray","splice","hashedKeys","JSON","stringify","limit","freeze","toJSON","places","to","percentString","percent","array","unitArray","unitObject","roundToPlace","getset","maxfn","saturationl","lightness","wblack","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","yiq","negate","lighten","darken","saturate","desaturate","whiten","blacken","fade","opaquer","rotate","degrees","mix","mixinColor","weight","color1","w1","w2","newAlpha","assertArray","raw","roundTo","num","Number","toFixed","channel","modifier","arr","colorNames","swizzle","reverseNames","cs","prefix","abbr","rgba","per","hexAlpha","i2","parseFloat","clamp","hexDouble","hsla","hwba","isArrayish","results","len","arg","wrap","Function","conversions","route","models","wrapRaw","wrappedFn","conversion","wrapRounded","fromModel","routes","routeModels","toModel","buildGraph","graph","deriveBFS","queue","current","pop","adjacents","adjacent","node","unshift","link","from","wrapConversion","path","cur","fallbackOnInvalid","isAlphaEnabled","fallback","warn","extResolvedColor","resolveColor","hasTransparency","_supportsAlphaBar","pickerParent","appendTo","remove","vertical","saturationGuide","hueGuide","alphaGuide","hsva","toHsvaRatio","getCloneHueOnly","toHexString","hexColor","alphaBg","colorStr","styles","background","icn","eq"],"mappings":"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 ?
			v0.index - v1.index :
			v0.weight - v1.weight;
	});
}

function wrapBoxes(boxes) {
	var layoutBoxes = [];
	var i, ilen, box;

	for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {
		box = boxes[i];
		layoutBoxes.push({
			index: i,
			box: box,
			pos: box.position,
			horizontal: box.isHorizontal(),
			weight: box.weight
		});
	}
	return layoutBoxes;
}

function setLayoutDims(layouts, params) {
	var i, ilen, layout;
	for (i = 0, ilen = layouts.length; i < ilen; ++i) {
		layout = layouts[i];
		// store width used instead of chartArea.w in fitBoxes
		layout.width = layout.horizontal
			? layout.box.fullWidth && params.availableWidth
			: params.vBoxMaxWidth;
		// store height used instead of chartArea.h in fitBoxes
		layout.height = layout.horizontal && params.hBoxMaxHeight;
	}
}

function buildLayoutBoxes(boxes) {
	var layoutBoxes = wrapBoxes(boxes);
	var left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);
	var right = sortByWeight(filterByPosition(layoutBoxes, 'right'));
	var top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);
	var bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));

	return {
		leftAndTop: left.concat(top),
		rightAndBottom: right.concat(bottom),
		chartArea: filterByPosition(layoutBoxes, 'chartArea'),
		vertical: left.concat(right),
		horizontal: top.concat(bottom)
	};
}

function getCombinedMax(maxPadding, chartArea, a, b) {
	return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);
}

function updateDims(chartArea, params, layout) {
	var box = layout.box;
	var maxPadding = chartArea.maxPadding;
	var newWidth, newHeight;

	if (layout.size) {
		// this layout was already counted for, lets first reduce old size
		chartArea[layout.pos] -= layout.size;
	}
	layout.size = layout.horizontal ? box.height : box.width;
	chartArea[layout.pos] += layout.size;

	if (box.getPadding) {
		var boxPadding = box.getPadding();
		maxPadding.top = Math.max(maxPadding.top, boxPadding.top);
		maxPadding.left = Math.max(maxPadding.left, boxPadding.left);
		maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);
		maxPadding.right = Math.max(maxPadding.right, boxPadding.right);
	}

	newWidth = params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right');
	newHeight = params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom');

	if (newWidth !== chartArea.w || newHeight !== chartArea.h) {
		chartArea.w = newWidth;
		chartArea.h = newHeight;

		// return true if chart area changed in layout's direction
		var sizes = layout.horizontal ? [newWidth, chartArea.w] : [newHeight, chartArea.h];
		return sizes[0] !== sizes[1] && (!isNaN(sizes[0]) || !isNaN(sizes[1]));
	}
}

function handleMaxPadding(chartArea) {
	var maxPadding = chartArea.maxPadding;

	function updatePos(pos) {
		var change = Math.max(maxPadding[pos] - chartArea[pos], 0);
		chartArea[pos] += change;
		return change;
	}
	chartArea.y += updatePos('top');
	chartArea.x += updatePos('left');
	updatePos('right');
	updatePos('bottom');
}

function getMargins(horizontal, chartArea) {
	var maxPadding = chartArea.maxPadding;

	function marginForPositions(positions) {
		var margin = {left: 0, top: 0, right: 0, bottom: 0};
		positions.forEach(function(pos) {
			margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);
		});
		return margin;
	}

	return horizontal
		? marginForPositions(['left', 'right'])
		: marginForPositions(['top', 'bottom']);
}

function fitBoxes(boxes, chartArea, params) {
	var refitBoxes = [];
	var i, ilen, layout, box, refit, changed;

	for (i = 0, ilen = boxes.length; i < ilen; ++i) {
		layout = boxes[i];
		box = layout.box;

		box.update(
			layout.width || chartArea.w,
			layout.height || chartArea.h,
			getMargins(layout.horizontal, chartArea)
		);
		if (updateDims(chartArea, params, layout)) {
			changed = true;
			if (refitBoxes.length) {
				// Dimensions changed and there were non full width boxes before this
				// -> we have to refit those
				refit = true;
			}
		}
		if (!box.fullWidth) { // fullWidth boxes don't need to be re-fitted in any case
			refitBoxes.push(layout);
		}
	}

	return refit ? fitBoxes(refitBoxes, chartArea, params) || changed : changed;
}

function placeBoxes(boxes, chartArea, params) {
	var userPadding = params.padding;
	var x = chartArea.x;
	var y = chartArea.y;
	var i, ilen, layout, box;

	for (i = 0, ilen = boxes.length; i < ilen; ++i) {
		layout = boxes[i];
		box = layout.box;
		if (layout.horizontal) {
			box.left = box.fullWidth ? userPadding.left : chartArea.left;
			box.right = box.fullWidth ? params.outerWidth - userPadding.right : chartArea.left + chartArea.w;
			box.top = y;
			box.bottom = y + box.height;
			box.width = box.right - box.left;
			y = box.bottom;
		} else {
			box.left = x;
			box.right = x + box.width;
			box.top = chartArea.top;
			box.bottom = chartArea.top + chartArea.h;
			box.height = box.bottom - box.top;
			x = box.right;
		}
	}

	chartArea.x = x;
	chartArea.y = y;
}

core_defaults._set('global', {
	layout: {
		padding: {
			top: 0,
			right: 0,
			bottom: 0,
			left: 0
		}
	}
});

/**
 * @interface ILayoutItem
 * @prop {string} position - The position of the item in the chart layout. Possible values are
 * 'left', 'top', 'right', 'bottom', and 'chartArea'
 * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area
 * @prop {boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down
 * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)
 * @prop {function} update - Takes two parameters: width and height. Returns size of item
 * @prop {function} getPadding -  Returns an object with padding on the edges
 * @prop {number} width - Width of item. Must be valid after update()
 * @prop {number} height - Height of item. Must be valid after update()
 * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update
 * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update
 * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update
 * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update
 */

// The layout service is very self explanatory.  It's responsible for the layout within a chart.
// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need
// It is this service's responsibility of carrying out that layout.
var core_layouts = {
	defaults: {},

	/**
	 * Register a box to a chart.
	 * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.
	 * @param {Chart} chart - the chart to use
	 * @param {ILayoutItem} item - the item to add to be layed out
	 */
	addBox: function(chart, item) {
		if (!chart.boxes) {
			chart.boxes = [];
		}

		// initialize item with default values
		item.fullWidth = item.fullWidth || false;
		item.position = item.position || 'top';
		item.weight = item.weight || 0;
		item._layers = item._layers || function() {
			return [{
				z: 0,
				draw: function() {
					item.draw.apply(item, arguments);
				}
			}];
		};

		chart.boxes.push(item);
	},

	/**
	 * Remove a layoutItem from a chart
	 * @param {Chart} chart - the chart to remove the box from
	 * @param {ILayoutItem} layoutItem - the item to remove from the layout
	 */
	removeBox: function(chart, layoutItem) {
		var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;
		if (index !== -1) {
			chart.boxes.splice(index, 1);
		}
	},

	/**
	 * Sets (or updates) options on the given `item`.
	 * @param {Chart} chart - the chart in which the item lives (or will be added to)
	 * @param {ILayoutItem} item - the item to configure with the given options
	 * @param {object} options - the new item options.
	 */
	configure: function(chart, item, options) {
		var props = ['fullWidth', 'position', 'weight'];
		var ilen = props.length;
		var i = 0;
		var prop;

		for (; i < ilen; ++i) {
			prop = props[i];
			if (options.hasOwnProperty(prop)) {
				item[prop] = options[prop];
			}
		}
	},

	/**
	 * Fits boxes of the given chart into the given size by having each box measure itself
	 * then running a fitting algorithm
	 * @param {Chart} chart - the chart
	 * @param {number} width - the width to fit into
	 * @param {number} height - the height to fit into
	 */
	update: function(chart, width, height) {
		if (!chart) {
			return;
		}

		var layoutOptions = chart.options.layout || {};
		var padding = helpers$1.options.toPadding(layoutOptions.padding);

		var availableWidth = width - padding.width;
		var availableHeight = height - padding.height;
		var boxes = buildLayoutBoxes(chart.boxes);
		var verticalBoxes = boxes.vertical;
		var horizontalBoxes = boxes.horizontal;

		// Essentially we now have any number of boxes on each of the 4 sides.
		// Our canvas looks like the following.
		// The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and
		// B1 is the bottom axis
		// There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays
		// These locations are single-box locations only, when trying to register a chartArea location that is already taken,
		// an error will be thrown.
		//
		// |----------------------------------------------------|
		// |                  T1 (Full Width)                   |
		// |----------------------------------------------------|
		// |    |    |                 T2                  |    |
		// |    |----|-------------------------------------|----|
		// |    |    | C1 |                           | C2 |    |
		// |    |    |----|                           |----|    |
		// |    |    |                                     |    |
		// | L1 | L2 |           ChartArea (C0)            | R1 |
		// |    |    |                                     |    |
		// |    |    |----|                           |----|    |
		// |    |    | C3 |                           | C4 |    |
		// |    |----|-------------------------------------|----|
		// |    |    |                 B1                  |    |
		// |----------------------------------------------------|
		// |                  B2 (Full Width)                   |
		// |----------------------------------------------------|
		//

		var params = Object.freeze({
			outerWidth: width,
			outerHeight: height,
			padding: padding,
			availableWidth: availableWidth,
			vBoxMaxWidth: availableWidth / 2 / verticalBoxes.length,
			hBoxMaxHeight: availableHeight / 2
		});
		var chartArea = extend({
			maxPadding: extend({}, padding),
			w: availableWidth,
			h: availableHeight,
			x: padding.left,
			y: padding.top
		}, padding);

		setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);

		// First fit vertical boxes
		fitBoxes(verticalBoxes, chartArea, params);

		// Then fit horizontal boxes
		if (fitBoxes(horizontalBoxes, chartArea, params)) {
			// if the area changed, re-fit vertical boxes
			fitBoxes(verticalBoxes, chartArea, params);
		}

		handleMaxPadding(chartArea);

		// Finally place the boxes to correct coordinates
		placeBoxes(boxes.leftAndTop, chartArea, params);

		// Move to opposite side of chart
		chartArea.x += chartArea.w;
		chartArea.y += chartArea.h;

		placeBoxes(boxes.rightAndBottom, chartArea, params);

		chart.chartArea = {
			left: chartArea.left,
			top: chartArea.top,
			right: chartArea.left + chartArea.w,
			bottom: chartArea.top + chartArea.h
		};

		// Finally update boxes in chartArea (radial scale for example)
		helpers$1.each(boxes.chartArea, function(layout) {
			var box = layout.box;
			extend(box, chart.chartArea);
			box.update(chartArea.w, chartArea.h);
		});
	}
};

/**
 * Platform fallback implementation (minimal).
 * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939
 */

var platform_basic = {
	acquireContext: function(item) {
		if (item && item.canvas) {
			// Support for any object associated to a canvas (including a context2d)
			item = item.canvas;
		}

		return item && item.getContext('2d') || null;
	}
};

var platform_dom = "/*\r\n * DOM element rendering detection\r\n * https://davidwalsh.name/detect-node-insertion\r\n */\r\n@keyframes chartjs-render-animation {\r\n\tfrom { opacity: 0.99; }\r\n\tto { opacity: 1; }\r\n}\r\n\r\n.chartjs-render-monitor {\r\n\tanimation: chartjs-render-animation 0.001s;\r\n}\r\n\r\n/*\r\n * DOM element resizing detection\r\n * https://github.com/marcj/css-element-queries\r\n */\r\n.chartjs-size-monitor,\r\n.chartjs-size-monitor-expand,\r\n.chartjs-size-monitor-shrink {\r\n\tposition: absolute;\r\n\tdirection: ltr;\r\n\tleft: 0;\r\n\ttop: 0;\r\n\tright: 0;\r\n\tbottom: 0;\r\n\toverflow: hidden;\r\n\tpointer-events: none;\r\n\tvisibility: hidden;\r\n\tz-index: -1;\r\n}\r\n\r\n.chartjs-size-monitor-expand > div {\r\n\tposition: absolute;\r\n\twidth: 1000000px;\r\n\theight: 1000000px;\r\n\tleft: 0;\r\n\ttop: 0;\r\n}\r\n\r\n.chartjs-size-monitor-shrink > div {\r\n\tposition: absolute;\r\n\twidth: 200%;\r\n\theight: 200%;\r\n\tleft: 0;\r\n\ttop: 0;\r\n}\r\n";

var platform_dom$1 = /*#__PURE__*/Object.freeze({
__proto__: null,
'default': platform_dom
});

var stylesheet = getCjsExportFromNamespace(platform_dom$1);

var EXPANDO_KEY = '$chartjs';
var CSS_PREFIX = 'chartjs-';
var CSS_SIZE_MONITOR = CSS_PREFIX + 'size-monitor';
var CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';
var CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';
var ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];

/**
 * DOM event types -> Chart.js event types.
 * Note: only events with different types are mapped.
 * @see https://developer.mozilla.org/en-US/docs/Web/Events
 */
var EVENT_TYPES = {
	touchstart: 'mousedown',
	touchmove: 'mousemove',
	touchend: 'mouseup',
	pointerenter: 'mouseenter',
	pointerdown: 'mousedown',
	pointermove: 'mousemove',
	pointerup: 'mouseup',
	pointerleave: 'mouseout',
	pointerout: 'mouseout'
};

/**
 * The "used" size is the final value of a dimension property after all calculations have
 * been performed. This method uses the computed style of `element` but returns undefined
 * if the computed style is not expressed in pixels. That can happen in some cases where
 * `element` has a size relative to its parent and this last one is not yet displayed,
 * for example because of `display: none` on a parent node.
 * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value
 * @returns {number} Size in pixels or undefined if unknown.
 */
function readUsedSize(element, property) {
	var value = helpers$1.getStyle(element, property);
	var matches = value && value.match(/^(\d+)(\.\d+)?px$/);
	return matches ? Number(matches[1]) : undefined;
}

/**
 * Initializes the canvas style and render size without modifying the canvas display size,
 * since responsiveness is handled by the controller.resize() method. The config is used
 * to determine the aspect ratio to apply in case no explicit height has been specified.
 */
function initCanvas(canvas, config) {
	var style = canvas.style;

	// NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it
	// returns null or '' if no explicit value has been set to the canvas attribute.
	var renderHeight = canvas.getAttribute('height');
	var renderWidth = canvas.getAttribute('width');

	// Chart.js modifies some canvas values that we want to restore on destroy
	canvas[EXPANDO_KEY] = {
		initial: {
			height: renderHeight,
			width: renderWidth,
			style: {
				display: style.display,
				height: style.height,
				width: style.width
			}
		}
	};

	// Force canvas to display as block to avoid extra space caused by inline
	// elements, which would interfere with the responsive resize process.
	// https://github.com/chartjs/Chart.js/issues/2538
	style.displa